<!-- livebook:{"app_settings":{"access_type":"public","output_type":"rich","slug":"karel-dreams"}} -->

# Karel Dreams

```elixir
Mix.install([
  {:kino, "~> 0.11.0"}
])
```

## Images

```elixir
defmodule Karel.Images do
  def robot do
    Map.new([:south, :north, :west, :east], &{&1, robot(&1)})
  end

  defp robot(:south) do
    """
    <svg viewBox="0 0 132.29166 132.29167" xmlns="http://www.w3.org/2000/svg" id="robot">
      <path
         id="karel-head"
         style="fill:#a87ace"
         d="m 40.01112,7.3210001 c -6.510779,0 -11.752254,5.2414759 -11.752254,11.7522539 v 29.929439 c 0,6.510778 5.241475,11.752254 11.752254,11.752254 h 52.26916 c 6.510777,0 11.75277,-5.241476 11.75277,-11.752254 V 19.073254 c 0,-6.510778 -5.241993,-11.7522539 -11.75277,-11.7522539 z M 37.856212,63.970771 c -0.415305,0.0019 -0.833544,0.01862 -1.25367,0.05064 -5.041508,0.384316 -10.352095,2.930711 -13.941784,7.506002 -4.786253,6.100388 -6.010195,15.862897 0.857828,28.006042 l 3.427698,-1.939933 c -6.347047,-11.22202 -4.959147,-18.824918 -1.185457,-23.63473 3.773689,-4.809811 10.437141,-6.773237 14.833719,-5.757788 l 0.886768,-3.837492 c -1.160308,-0.267988 -2.379186,-0.398371 -3.625102,-0.392741 z m 56.579492,0 c -1.245915,-0.0056 -2.464794,0.124753 -3.625102,0.392741 l 0.886768,3.837492 c 4.396577,-1.015449 11.06004,0.947977 14.83372,5.757788 3.77369,4.809812 5.1616,12.41271 -1.18545,23.634733 l 3.42769,1.939933 c 6.86803,-12.143145 5.64357,-21.905654 0.85731,-28.006042 -3.58968,-4.575291 -8.89975,-7.121686 -13.941263,-7.506002 -0.42013,-0.03203 -0.838368,-0.04877 -1.253673,-0.05064 z M 49.596955,99.085424 V 112.3456 c -0.379506,1.37909 -1.419306,2.38957 -2.675806,2.59984 h -1.455065 c -2.134296,0 -3.851962,1.68459 -3.851962,3.77754 v 7.14479 c 0,2.09296 1.717666,3.77806 3.851962,3.77806 h 14.511775 c 2.134297,0 3.852995,-1.6851 3.852995,-3.77806 v -7.14479 c 0,-2.09295 -1.718698,-3.77754 -3.852995,-3.77754 H 58.44241 c -1.256504,-0.21027 -2.296298,-1.22074 -2.675806,-2.59984 V 99.085424 Z m 26.882161,0 V 112.3456 c -0.379506,1.37909 -1.419306,2.38957 -2.675806,2.59984 h -1.490287 c -2.134295,0 -3.851961,1.68459 -3.851961,3.77754 v 7.14479 c 0,2.09296 1.717666,3.77806 3.851961,3.77806 h 14.512293 c 2.134297,0 3.852478,-1.6851 3.852478,-3.77806 v -7.14479 c 0,-2.09295 -1.718181,-3.77754 -3.852478,-3.77754 H 85.32457 c -1.256503,-0.21027 -2.296298,-1.22074 -2.675805,-2.59984 V 99.085424 Z" />
      <path
         id="karel-body"
         style="fill:#3dbcc0"
         d="m 54.52824,2.6458333 c -0.746052,0 -1.346688,0.600636 -1.346688,1.3466878 v 0.5105632 c 0,0.7460518 0.600636,1.3466878 1.346688,1.3466878 h 10.063468 v 1.471228 h 3.108337 V 5.8497721 H 77.76403 c 0.746053,0 1.346688,-0.600636 1.346688,-1.3466878 V 3.9925211 c 0,-0.7460518 -0.600635,-1.3466878 -1.346688,-1.3466878 z M 47.782915,60.754947 c -5.143282,0 -9.283671,4.140906 -9.283671,9.284188 v 23.643518 c 0,5.14328 4.140389,9.283667 9.283671,9.283667 h 36.725923 c 5.143282,0 9.284188,-4.140387 9.284188,-9.283667 V 70.039135 c 0,-5.143282 -4.140906,-9.284188 -9.284188,-9.284188 z M 28.177911,96.100593 a 7.4036958,6.2776936 46.631552 0 0 -0.856279,0.07751 7.4036958,6.2776936 46.631552 0 0 -2.960543,1.437121 7.4036958,6.2776936 46.631552 0 0 -1.603519,2.873736 7.4036958,6.2776936 46.631552 0 0 1.180806,5.62808 l 0.0036,-0.004 a 1.2535163,1.2535163 0 0 0 0.158647,0.20825 1.2535163,1.2535163 0 0 0 1.696537,0.11628 l 0.135393,-0.12764 a 1.2535163,1.2535163 0 0 0 0.02222,-0.0253 l 0.0021,0.002 3.485059,-3.2923 3.485575,-3.292315 -0.0015,-0.0021 a 1.2535163,1.2535163 0 0 0 0.02584,-0.02067 l 0.136426,-0.128158 A 1.2535163,1.2535163 0 0 0 33.068633,97.850416 1.2535163,1.2535163 0 0 0 32.869679,97.6804 l 0.0036,-0.0036 a 7.4036958,6.2776936 46.631552 0 0 -4.69532,-1.576648 z m 75.935939,0 a 6.2776936,7.4036958 43.368448 0 0 -4.695324,1.576648 l 0.004,0.0036 a 1.2535163,1.2535163 0 0 0 -0.19947,0.170016 1.2535163,1.2535163 0 0 0 -0.0191,1.700671 l 0.13591,0.128158 a 1.2535163,1.2535163 0 0 0 0.0264,0.02067 l -0.002,0.0021 3.485574,3.292314 3.48506,3.2923 0.002,-0.002 a 1.2535163,1.2535163 0 0 0 0.0222,0.0253 l 0.13539,0.12764 a 1.2535163,1.2535163 0 0 0 1.69654,-0.11628 1.2535163,1.2535163 0 0 0 0.15865,-0.20825 l 0.004,0.004 a 6.2776936,7.4036958 43.368448 0 0 1.18029,-5.62808 6.2776936,7.4036958 43.368448 0 0 -1.60352,-2.873735 6.2776936,7.4036958 43.368448 0 0 -2.96003,-1.437121 6.2776936,7.4036958 43.368448 0 0 -0.85679,-0.07751 z" />
      <path
         id="karel-k"
         style="fill:#ffffff"
         d="m 61.742687,85.892684 v 3.654422 h 1.191317 c 0.794205,0 1.357662,0.155623 1.690371,0.466868 0.343441,0.300508 0.515162,0.697611 0.515162,1.191308 0,0.482966 -0.171721,0.880069 -0.515162,1.191309 -0.332709,0.300513 -0.896166,0.45077 -1.690371,0.45077 h -5.006725 c -0.794205,0 -1.363028,-0.150257 -1.706469,-0.45077 -0.332709,-0.31124 -0.499064,-0.713709 -0.499064,-1.207406 0,-0.482966 0.17172,-0.874703 0.515161,-1.175211 0.343441,-0.311245 0.906899,-0.466868 1.690372,-0.466868 H 58.44244 V 76.635879 h -0.515161 c -0.794205,0 -1.363028,-0.150257 -1.706469,-0.45077 -0.332709,-0.31124 -0.499064,-0.713709 -0.499064,-1.207406 0,-0.493697 0.166355,-0.8908 0.499064,-1.191308 0.343441,-0.311245 0.912264,-0.466868 1.706469,-0.466868 l 5.006725,0.01607 c 0.794205,0 1.357662,0.150257 1.690371,0.45077 0.343441,0.300508 0.515162,0.697611 0.515162,1.191308 0,0.493698 -0.171721,0.896167 -0.515162,1.207406 -0.332709,0.300514 -0.896166,0.450771 -1.690371,0.450771 h -1.191317 v 4.894032 l 7.196408,-5.03892 c -0.34344,-0.246847 -0.579557,-0.477597 -0.708351,-0.69225 -0.128787,-0.214648 -0.193181,-0.477595 -0.193181,-0.78884 0,-0.504429 0.166355,-0.912264 0.499064,-1.223504 0.343441,-0.311245 0.912264,-0.466868 1.706469,-0.466868 l 3.364646,0.01607 c 0.794206,0 1.357663,0.150257 1.690372,0.45077 0.343441,0.300508 0.515161,0.697611 0.515161,1.191309 0,0.482965 -0.17172,0.880068 -0.515161,1.191308 -0.332709,0.311245 -0.858602,0.466868 -1.577679,0.466868 l -5.924355,5.183808 c 1.105452,0.633217 2.14114,1.599145 3.107065,2.897786 0.976664,1.298635 1.840632,2.908512 2.591904,4.829633 h 0.885435 c 0.783474,0 1.341565,0.155623 1.674274,0.466868 0.343441,0.300508 0.515161,0.697611 0.515161,1.191308 0,0.482965 -0.166354,0.880068 -0.499063,1.191308 -0.332709,0.300513 -0.896166,0.45077 -1.690372,0.45077 H 71.386111 C 70.69923,91.205235 69.947952,89.638286 69.132277,88.146461 68.466865,86.933686 68.044082,85.92072 67.44306,85.373363 66.85277,84.815269 65.753086,83.96452 64.926679,83.631811 Z" />
      <path
         id="karel-eye-white"
         style="fill:#ffffff"
         d="m 51.223488,22.149552 c -6.944679,-7.1e-5 -12.574497,5.629747 -12.574426,12.574426 -7.1e-5,6.944679 5.629747,12.574497 12.574426,12.574426 6.944679,7.1e-5 12.574497,-5.629747 12.574426,-12.574426 7.1e-5,-6.944679 -5.629747,-12.574497 -12.574426,-12.574426 z m 29.844689,0 c -6.944679,-7.1e-5 -12.574497,5.629747 -12.574426,12.574426 -7.1e-5,6.944679 5.629747,12.574497 12.574426,12.574426 6.944679,7.1e-5 12.574497,-5.629747 12.574426,-12.574426 7.1e-5,-6.944679 -5.629747,-12.574497 -12.574426,-12.574426 z" />
      <path
         id="karel-eye-dark"
         style="fill:#525252"
         d="m 51.223746,21.34185 c -7.381225,0 -13.383163,6.001419 -13.383163,13.382645 0,7.381227 6.001938,13.381095 13.383163,13.381095 7.381225,0 13.382645,-5.999868 13.382645,-13.381095 0,-7.381226 -6.00142,-13.382645 -13.382645,-13.382645 z m 29.844689,0 c -7.381224,0 -13.383162,6.001419 -13.383162,13.382645 0,7.381227 6.001938,13.381095 13.383162,13.381095 7.381226,0 13.382646,-5.999868 13.382646,-13.381095 0,-7.381226 -6.00142,-13.382645 -13.382646,-13.382645 z m -29.844689,1.615405 c 6.507904,0 11.76569,5.259338 11.76569,11.76724 0,6.507903 -5.257786,11.76569 -11.76569,11.76569 -6.507905,0 -11.76569,-5.257787 -11.76569,-11.76569 0,-6.507902 5.257785,-11.76724 11.76569,-11.76724 z m 29.844689,0 c 6.507905,0 11.76569,5.259338 11.76569,11.76724 0,6.507903 -5.257785,11.76569 -11.76569,11.76569 -6.507904,0 -11.76569,-5.257787 -11.76569,-11.76569 0,-6.507902 5.257786,-11.76724 11.76569,-11.76724 z m -29.844689,5.366597 c -3.534731,-1.01e-4 -6.400227,2.865396 -6.400126,6.400126 -1.01e-4,3.534731 2.865395,6.400227 6.400126,6.400126 3.53473,1.01e-4 6.400227,-2.865395 6.400126,-6.400126 1.01e-4,-3.53473 -2.865396,-6.400227 -6.400126,-6.400126 z m 29.844689,0 c -3.53473,-1.01e-4 -6.400227,2.865396 -6.400126,6.400126 -1.01e-4,3.534731 2.865396,6.400227 6.400126,6.400126 3.534731,1.01e-4 6.400227,-2.865395 6.400126,-6.400126 1.01e-4,-3.53473 -2.865395,-6.400227 -6.400126,-6.400126 z" />
      <path
         id="karel-eye-light"
         style="fill:#ffffff"
         d="m 51.223488,33.220711 a 1.5032583,1.5032583 0 0 0 -1.503268,1.503267 1.5032583,1.5032583 0 0 0 1.503268,1.503268 1.5032583,1.5032583 0 0 0 1.503267,-1.503268 1.5032583,1.5032583 0 0 0 -1.503267,-1.503267 z m 29.844689,0 a 1.5032583,1.5032583 0 0 0 -1.503267,1.503267 1.5032583,1.5032583 0 0 0 1.503267,1.503268 1.5032583,1.5032583 0 0 0 1.503268,-1.503268 1.5032583,1.5032583 0 0 0 -1.503268,-1.503267 z" />
    </svg>
    """
  end

  defp robot(:north) do
    """
    <svg viewBox="0 0 132.29166 132.29167" xmlns="http://www.w3.org/2000/svg" id="robot">
      <path
         id="karel-head"
         style="fill:#a87ace"
         d="m 92.28055,7.3210001 c 6.510779,0 11.75225,5.2414759 11.75225,11.7522539 v 29.929439 c 0,6.510778 -5.241471,11.752254 -11.75225,11.752254 H 40.01139 c -6.510777,0 -11.75277,-5.241476 -11.75277,-11.752254 V 19.073254 c 0,-6.510778 5.241993,-11.7522539 11.75277,-11.7522539 z m 2.154908,56.6497709 c 0.415305,0.0019 0.833544,0.01862 1.25367,0.05064 5.041512,0.384316 10.352092,2.930711 13.941782,7.506002 4.78626,6.100388 6.0102,15.862897 -0.85783,28.006042 l -3.42769,-1.939933 c 6.34704,-11.22202 4.95914,-18.824918 1.18545,-23.63473 -3.77369,-4.809811 -10.437138,-6.773237 -14.833716,-5.757788 l -0.886768,-3.837492 c 1.160308,-0.267988 2.379186,-0.398371 3.625102,-0.392741 z m -56.579492,0 c 1.245915,-0.0056 2.464794,0.124753 3.625102,0.392741 L 40.5943,68.201004 c -4.396577,-1.015449 -11.06004,0.947977 -14.83372,5.757788 -3.77369,4.809812 -5.1616,12.41271 1.18545,23.634733 l -3.42769,1.939933 C 16.65031,87.390313 17.87477,77.627804 22.66103,71.527416 c 3.58968,-4.575291 8.89975,-7.121686 13.941263,-7.506002 0.42013,-0.03203 0.838368,-0.04877 1.253673,-0.05064 z m 44.89034,35.114653 V 112.3456 c 0.379506,1.37909 1.419306,2.38957 2.675806,2.59984 h 1.403474 c 2.134296,0 3.851962,1.68459 3.851962,3.77754 v 7.14479 c 0,2.09296 -1.717666,3.77806 -3.851962,3.77806 H 72.313811 c -2.134297,0 -3.852995,-1.6851 -3.852995,-3.77806 v -7.14479 c 0,-2.09295 1.718698,-3.77754 3.852995,-3.77754 h 1.58704 c 1.256504,-0.21027 2.296298,-1.22074 2.675806,-2.59984 V 99.085424 Z m -26.928711,0 V 112.3456 c 0.379506,1.37909 1.419306,2.38957 2.675806,2.59984 h 1.485246 c 2.134295,0 3.851961,1.68459 3.851961,3.77754 v 7.14479 c 0,2.09296 -1.717666,3.77806 -3.851961,3.77806 H 45.466354 c -2.134297,0 -3.852478,-1.6851 -3.852478,-3.77806 v -7.14479 c 0,-2.09295 1.718181,-3.77754 3.852478,-3.77754 h 1.505787 c 1.256503,-0.21027 2.296298,-1.22074 2.675805,-2.59984 V 99.085424 Z" />
      <path
         id="karel-body"
         style="fill:#3dbcc0"
         d="m 77.76343,2.6458333 c 0.746052,0 1.346688,0.600636 1.346688,1.3466878 v 0.5105632 c 0,0.7460518 -0.600636,1.3466878 -1.346688,1.3466878 H 67.699962 v 1.471228 H 64.591625 V 5.8497721 H 54.52764 c -0.746053,0 -1.346688,-0.600636 -1.346688,-1.3466878 V 3.9925211 c 0,-0.7460518 0.600635,-1.3466878 1.346688,-1.3466878 z m 6.745325,58.1091137 c 5.143282,0 9.283671,4.140906 9.283671,9.284188 v 23.643518 c 0,5.14328 -4.140389,9.283667 -9.283671,9.283667 H 47.782832 c -5.143282,0 -9.284188,-4.140387 -9.284188,-9.283667 V 70.039135 c 0,-5.143282 4.140906,-9.284188 9.284188,-9.284188 z m 19.605005,35.345646 a 6.2776936,7.4036958 43.368448 0 1 0.85628,0.07751 6.2776936,7.4036958 43.368448 0 1 2.96054,1.437121 6.2776936,7.4036958 43.368448 0 1 1.60352,2.873736 6.2776936,7.4036958 43.368448 0 1 -1.18081,5.62808 l -0.004,-0.004 a 1.2535163,1.2535163 0 0 1 -0.15864,0.20825 1.2535163,1.2535163 0 0 1 -1.69654,0.11628 l -0.13539,-0.12764 a 1.2535163,1.2535163 0 0 1 -0.0222,-0.0253 l -0.002,0.002 -3.48506,-3.2923 -3.485577,-3.292315 0.0015,-0.0021 a 1.2535163,1.2535163 0 0 1 -0.02584,-0.02067 l -0.136426,-0.128158 a 1.2535163,1.2535163 0 0 1 0.01964,-1.700671 1.2535163,1.2535163 0 0 1 0.198954,-0.170016 l -0.0036,-0.0036 a 6.2776936,7.4036958 43.368448 0 1 4.695319,-1.576648 z m -75.93594,0 a 7.4036958,6.2776936 46.631552 0 1 4.695324,1.576648 l -0.004,0.0036 a 1.2535163,1.2535163 0 0 1 0.19947,0.170016 1.2535163,1.2535163 0 0 1 0.0191,1.700671 l -0.13591,0.128158 a 1.2535163,1.2535163 0 0 1 -0.0264,0.02067 l 0.002,0.0021 -3.485574,3.292314 -3.48506,3.2923 -0.002,-0.002 a 1.2535163,1.2535163 0 0 1 -0.0222,0.0253 l -0.13539,0.12764 a 1.2535163,1.2535163 0 0 1 -1.69654,-0.11628 1.2535163,1.2535163 0 0 1 -0.15865,-0.20825 l -0.004,0.004 a 7.4036958,6.2776936 46.631552 0 1 -1.18029,-5.62808 7.4036958,6.2776936 46.631552 0 1 1.60352,-2.873735 7.4036958,6.2776936 46.631552 0 1 2.96003,-1.437121 7.4036958,6.2776936 46.631552 0 1 0.85679,-0.07751 z" />
    </svg>
    """
  end

  defp robot(:west) do
    """
    <svg viewBox="0 0 132.29166 132.29167" xmlns="http://www.w3.org/2000/svg" id="robot">
      <path
         id="karel-body"
         style="fill:#3dbcc0"
         d="m 63.610443,2.6464844 c -0.746052,5.8e-6 -1.347655,0.5996511 -1.347656,1.3457031 v 0.5117187 c 0,0.7460521 0.601603,1.3457087 1.347656,1.3457032 h 10.0625 v 1.4707031 h 3.109375 V 5.8496094 h 10.0625 c 0.746053,-5.5e-6 1.347656,-0.5996511 1.347656,-1.3457032 V 3.9921875 c -10e-7,-0.7460422 -0.601606,-1.3456992 -1.347656,-1.3457031 z m 1.236328,58.1093746 c -5.143271,10e-7 -9.283206,4.139938 -9.283203,9.283203 v 23.644532 c 0,5.14327 4.139933,9.283206 9.283203,9.283206 h 19.128907 c 5.143272,0 9.283203,-4.139936 9.283203,-9.283206 V 70.039062 c 10e-7,-5.143274 -4.139932,-9.283205 -9.283203,-9.283203 z M 44.63974,91.595703 c -0.0437,-0.002 -0.08713,-6.32e-4 -0.130859,0.002 -0.652357,0.04082 -1.164589,0.57498 -1.175781,1.228516 l 0.01172,0.1875 c 0.0018,0.01129 0.0039,0.02221 0.0059,0.0332 h -0.002 l 0.298829,4.785156 0.298828,4.785155 h 0.002 c -9.95e-4,0.0114 2.52e-4,0.022 0,0.0332 l 0.01172,0.18555 c 0.09267,0.64688 0.666126,1.11497 1.318359,1.07422 0.08728,-0.006 0.173499,-0.0217 0.257812,-0.0449 v 0.006 c 2.037622,-0.49262 3.74926,-1.69552 4.705079,-3.30664 0.587675,-0.993276 0.860951,-2.095792 0.791015,-3.195305 -0.0675,-1.099512 -0.475016,-2.157991 -1.18164,-3.070313 C 49.67642,94.074397 49.483879,93.85909 49.276459,93.65625 48.124252,92.530124 46.525238,91.801479 44.7706,91.603516 v 0.0059 c -0.04329,-0.0065 -0.08716,-0.01167 -0.13086,-0.01367 z" />
      <path
         id="karel-eye"
         style="fill:#525252;fill-opacity:1;stroke-width:0.286486;-inkscape-stroke:none;stop-color:#000000"
         d="m 32.58085,21.34185 v 6.921541 h -2.35276 v 13.03848 h 2.35276 v 6.803719 h 3.078045 V 21.34185 Z" />
      <path
         id="karel-head"
         style="fill:#a87ace"
         d="m 47.412801,7.3203125 c -6.51076,0 -11.753906,5.2431485 -11.753906,11.7539065 v 29.927734 c 0,6.51076 5.243146,11.753906 11.753906,11.753906 h 42.898814 c 6.510757,0 11.751955,-5.243146 11.751955,-11.753906 V 19.074219 c 0,-6.510758 -5.241198,-11.7539065 -11.751955,-11.7539065 z m 30.396861,57.7949215 -4.865234,1.314454 c 2.419387,7.083437 0.233468,16.308873 -4.720704,21.001953 -4.806772,4.553449 -9.46984,6.289582 -18.140624,7.189453 0.562878,0.835361 0.889545,1.776033 0.949218,2.748047 0.06161,0.968553 -0.144488,1.939584 -0.595703,2.835939 12.865769,-1.245544 19.807375,-6.763755 22.726563,-10.271486 2.997642,-3.602006 7.927217,-14.323944 4.646484,-24.81836 z m -7.71875,37.851566 v 9.3789 c -0.37951,1.37909 -1.419285,2.38934 -2.675781,2.59961 h -2.748047 c -2.134286,0 -3.853516,1.6844 -3.853516,3.77735 v 7.14453 c 0,2.09296 1.71923,3.77929 3.853516,3.77929 h 14.511719 c 2.134284,0 3.851562,-1.68633 3.851562,-3.77929 v -7.14453 c 0,-2.09295 -1.049308,-3.77735 -3.183594,-3.77735 h -0.910156 c -1.256498,-0.21027 -2.296273,-1.22051 -2.675781,-2.59961 v -9.3789 z" />
    </svg>
    """
  end

  defp robot(:east) do
    """
    <svg viewBox="0 0 132.29166 132.29167" xmlns="http://www.w3.org/2000/svg" id="robot">
      <path
         id="karel-body"
         style="fill:#3dbcc0"
         d="m 68.681217,2.6464844 c 0.746052,5.8e-6 1.347655,0.5996511 1.347656,1.3457031 v 0.5117187 c 0,0.7460521 -0.601603,1.3457087 -1.347656,1.3457032 h -10.0625 V 7.3203125 H 55.509342 V 5.8496094 h -10.0625 C 44.700789,5.8496039 44.099186,5.2499583 44.099186,4.5039062 V 3.9921875 c 10e-7,-0.7460422 0.601606,-1.3456992 1.347656,-1.3457031 z M 67.444889,60.755859 c 5.143271,10e-7 9.283206,4.139938 9.283203,9.283203 v 23.644532 c 0,5.14327 -4.139933,9.283206 -9.283203,9.283206 H 48.315982 c -5.143272,0 -9.283203,-4.139936 -9.283203,-9.283206 V 70.039062 c -10e-7,-5.143274 4.139932,-9.283205 9.283203,-9.283203 z M 87.65192,91.595703 c 0.0437,-0.002 0.08713,-6.32e-4 0.130859,0.002 0.652357,0.04082 1.164589,0.57498 1.175781,1.228516 l -0.01172,0.1875 c -0.0018,0.01129 -0.0039,0.02221 -0.0059,0.0332 h 0.002 l -0.298829,4.785156 -0.298828,4.785155 h -0.002 c 9.95e-4,0.0114 -2.52e-4,0.022 0,0.0332 l -0.01172,0.18555 c -0.09267,0.64688 -0.666126,1.11497 -1.318359,1.07422 -0.08728,-0.006 -0.173499,-0.0217 -0.257812,-0.0449 v 0.006 c -2.037622,-0.49262 -3.74926,-1.69552 -4.705079,-3.30664 -0.587675,-0.993276 -0.860951,-2.095792 -0.791015,-3.195305 0.0675,-1.099512 0.475016,-2.157991 1.18164,-3.070313 0.174302,-0.224645 0.366843,-0.439952 0.574263,-0.642792 1.152207,-1.126126 2.751221,-1.854771 4.505859,-2.052734 v 0.0059 c 0.04329,-0.0065 0.08716,-0.01167 0.13086,-0.01367 z" />
      <path
         id="karel-eye"
         style="fill:#525252;fill-opacity:1;stroke-width:0.286486;-inkscape-stroke:none;stop-color:#000000"
         d="m 99.71081,21.34185 v 6.921541 h 2.35276 v 13.03848 H 99.71081 V 48.10559 H 96.632765 V 21.34185 Z" />
      <path
         id="karel-head"
         style="fill:#a87ace"
         d="m 84.878859,7.3203125 c 6.51076,0 11.753906,5.2431485 11.753906,11.7539065 v 29.927734 c 0,6.51076 -5.243146,11.753906 -11.753906,11.753906 H 41.980045 c -6.510757,0 -11.751957,-5.243146 -11.751957,-11.753906 V 19.074219 c 0,-6.510758 5.2412,-11.7539065 11.751957,-11.7539065 z m -30.396861,57.7949215 4.865234,1.314454 c -2.419387,7.083437 -0.233468,16.308873 4.720704,21.001953 4.806772,4.553449 9.46984,6.289582 18.140624,7.189453 -0.562878,0.835361 -0.889545,1.776033 -0.949218,2.748047 -0.06161,0.968553 0.144488,1.939584 0.595703,2.835939 C 68.989276,98.959536 62.04767,93.441325 59.128482,89.933594 56.13084,86.331588 51.201265,75.60965 54.481998,65.115234 Z m 7.71875,37.851566 v 9.3789 c 0.37951,1.37909 1.419285,2.38934 2.675781,2.59961 h 2.748047 c 2.134286,0 3.853516,1.6844 3.853516,3.77735 v 7.14453 c 0,2.09296 -1.71923,3.77929 -3.853516,3.77929 H 53.112857 c -2.134284,0 -3.851562,-1.68633 -3.851562,-3.77929 v -7.14453 c 0,-2.09295 1.049308,-3.77735 3.183594,-3.77735 h 0.910156 c 1.256498,-0.21027 2.296273,-1.22051 2.675781,-2.59961 v -9.3789 z" />
    </svg>
    """
  end
end
```

## Code

```elixir
defmodule Karel.Board do
  defstruct [:cols, :rows]
  def new(cols), do: new(cols, cols)
  def new(cols, rows), do: %__MODULE__{cols: cols, rows: rows}
end

defmodule Karel.Robot do
  defstruct x: 1, y: 1, dir: :south

  def step(robot) do
    case robot.dir do
      :south -> %{robot | y: robot.y + 1}
      :north -> %{robot | y: robot.y - 1}
      :east -> %{robot | x: robot.x + 1}
      :west -> %{robot | x: robot.x - 1}
    end
  end

  def turn(robot, dir) do
    case {robot.dir, dir} do
      {:south, :left} -> %{robot | dir: :east}
      {:south, :right} -> %{robot | dir: :west}
      {:east, :left} -> %{robot | dir: :north}
      {:east, :right} -> %{robot | dir: :south}
      {:north, :left} -> %{robot | dir: :west}
      {:north, :right} -> %{robot | dir: :east}
      {:west, :left} -> %{robot | dir: :south}
      {:west, :right} -> %{robot | dir: :north}
    end
  end
end

defmodule Karel.Game do
  alias Karel.Board
  alias Karel.Robot

  defstruct [:board, :robot]

  def new do
    %__MODULE__{board: Board.new(10), robot: %Robot{}}
  end

  def step(game) do
    robot = Robot.step(game.robot)
    %{game | robot: robot}
  end

  def turn(game, dir) do
    robot = Robot.turn(game.robot, dir)
    %{game | robot: robot}
  end
end
```

```elixir
defmodule Karel.Kino do
  use Kino.JS
  use Kino.JS.Live
  alias Karel.Game
  alias Karel.Images

  def new(game) do
    Kino.JS.Live.new(__MODULE__, game)
  end

  def step(kino) do
    Kino.JS.Live.call(kino, :step)
  end

  def turn(kino, dir) when dir in [:left, :right] do
    Kino.JS.Live.call(kino, {:turn, dir})
  end

  @impl true
  def init(game, ctx) do
    {:ok, assign(ctx, game: game)}
  end

  @impl true
  def handle_connect(ctx) do
    images = %{robot: Images.robot()}
    game = ctx.assigns.game

    data = %{
      cols: game.board.cols,
      html: html(game.board),
      images: images,
      x: game.robot.x,
      y: game.robot.y,
      dir: game.robot.dir
    }

    {:ok, data, ctx}
  end

  @impl true
  def handle_call(:step, _, ctx) do
    game = Game.step(ctx.assigns.game)
    robot = game.robot
    broadcast_event(ctx, "step", %{x: robot.x, y: robot.y, dir: robot.dir})
    {:reply, :ok, assign(ctx, game: game)}
  end

  def handle_call({:turn, dir}, _, ctx) do
    game = Game.turn(ctx.assigns.game, dir)
    robot = game.robot
    broadcast_event(ctx, "turn", %{x: robot.x, y: robot.y, dir: robot.dir})
    {:reply, :ok, assign(ctx, game: game)}
  end

  defp html(board) do
    ~s|<div class="board">#{html_fields(board)}</div>|
  end

  defp html_fields(board) do
    for y <- 1..board.rows, x <- 1..board.cols do
      ~s|<div id="board-field-#{x}-#{y}"></div>|
    end
  end

  asset "main.js" do
    """
    export function init(ctx, data) {
      document.querySelector(':root').style.setProperty('--board-cols', data.cols);
      ctx.importCSS("main.css")
      ctx.root.innerHTML = data.html
      fieldElement(data.x, data.y).innerHTML = data.images.robot[data.dir]

      ctx.handleEvent("step", (step) => {
        var robot = document.getElementById("robot")
        robot.remove()
        robot.setAttribute("data-move-dir", step.dir)
        fieldElement(step.x, step.y).appendChild(robot)
      });

      ctx.handleEvent("turn", (turn) => {
        var robot = document.getElementById("robot")
        robot.remove()
        fieldElement(turn.x, turn.y).innerHTML = data.images.robot[turn.dir]
      });
    }

    function fieldElement(x, y) {
      return document.getElementById(fieldId(x, y))
    }

    function fieldId(x, y) {
      return `board-field-${x}-${y}`
    }
    """
  end

  asset "main.css" do
    """
    :root {
      --border-color: White;
      --border-size: 2px;
      --bg-color: LightGrey;
      --step-duration: 0.5s;
    }
    .board {
      background: var(--border-color);
      border: var(--border-size) solid var(--border-color);
      display: grid;
      grid-gap: var(--border-size);
      grid-template-columns: repeat(var(--board-cols), auto);
      width: 50vw;
    }
    .board div {
      background: var(--bg-color);
      aspect-ratio: 1/1;
      position: relative;
    }
    .board div svg {
      position: absolute;
      width: 100%;
      z-index: 1;
    }
    svg[data-move-dir="south"] {
      animation-duration: var(--step-duration);
      animation-name: slideSouth;
    }
    @keyframes slideSouth {
      from { top: calc(-100% - var(--border-size)); }
      to { top: 0px; }
    }
    svg[data-move-dir="east"] {
      animation-duration: var(--step-duration);
      animation-name: slideEast;
    }
    @keyframes slideEast {
      from { left: calc(-100% - var(--border-size)); }
      to { left: 0px; }
    }
    svg[data-move-dir="north"] {
      animation-duration: var(--step-duration);
      animation-name: slideNorth;
    }
    @keyframes slideNorth {
      from { top: calc(100% + var(--border-size)); }
      to { top: 0px; }
    }
    svg[data-move-dir="west"] {
      animation-duration: var(--step-duration);
      animation-name: slideWest;
    }
    @keyframes slideWest {
      from { left: calc(100% + var(--border-size)); }
      to { left: 0px; }
    }
    """
  end
end
```

```elixir
karel = Karel.Kino.new(Karel.Game.new())
```

```elixir
Karel.Kino.turn(karel, :left)
Process.sleep(1000)
Karel.Kino.step(karel)
Process.sleep(1000)
Karel.Kino.step(karel)
Process.sleep(1000)
Karel.Kino.turn(karel, :right)
Karel.Kino.turn(karel, :right)
Karel.Kino.step(karel)
```
